// <auto-generated />
using CIK.Weather.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CIK.Weather.API.Migrations
{
    [DbContext(typeof(WeatherContext))]
    partial class WeatherContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CIK.Weather.Models.TemperatureInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<double>("Temperature");

                    b.Property<string>("WeatherStationId");

                    b.HasKey("Id");

                    b.HasIndex("WeatherStationId");

                    b.ToTable("Temperature");
                });

            modelBuilder.Entity("CIK.Weather.Models.WeatherStation", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Altitude");

                    b.Property<float>("Latitude");

                    b.Property<float>("Longitude");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("WeatherStation");
                });

            modelBuilder.Entity("CIK.Weather.Models.TemperatureInfo", b =>
                {
                    b.HasOne("CIK.Weather.Models.WeatherStation", "WeatherStation")
                        .WithMany()
                        .HasForeignKey("WeatherStationId");
                });
#pragma warning restore 612, 618
        }
    }
}
